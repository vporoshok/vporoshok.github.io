<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Презентации on Где-то на дальнем сервере</title>
    <link>https://vporoshok.me/slides/</link>
    <description>Recent content in Презентации on Где-то на дальнем сервере</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ru</language><atom:link href="https://vporoshok.me/slides/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Синхронизация состояния в распределённых системах</title>
      <link>https://vporoshok.me/slides/2019/11/state-sync/</link>
      <pubDate>Sat, 16 Nov 2019 12:24:33 +0000</pubDate>
      
      <guid>https://vporoshok.me/slides/2019/11/state-sync/</guid>
      <description>Синхронизация состояния в распределённых системах   Всем привет!  Бастрыков Евгений Программирую с 2013 Преподаю «Алгоритмы и структуры данных» Разрабатываю QuickBPM    План  кеш во внешнем сервисе кеш внутри сервиса шардирование   Не используйте, если можете   Кеш во внешнем сервисе   Кеш во внешнем сервисе   Кеш во внешнем сервисе Идеален, если
 чистые данные не меняются подготовка занимает время/ресурсы    Кеш во внешнем сервисе Проблемы:</description>
    </item>
    
    <item>
      <title>Алгоритмы?! А оно мне надо?</title>
      <link>https://vporoshok.me/slides/2019/05/why-algorithm/</link>
      <pubDate>Sun, 05 May 2019 05:37:34 +0000</pubDate>
      
      <guid>https://vporoshok.me/slides/2019/05/why-algorithm/</guid>
      <description>Алгоритмы?!А оно мне надо?  Photo by Ben White on Unsplash   Всем привет!  Бастрыков Евгений Программирую с 2013 Преподаю «Алгоритмы и структуры данных» Разрабатываю elma365    О чём доклад   Так для чего же изучать алгоритмы?   Photo by Mathew Schwartz on Unsplash   Так для чего же изучать алгоритмы?   О чём нам не говорили в школе?   Photo by Stefan Steinbauer on Unsplash   Литература учит формулировать мысли   Алгоритмы это литература   Алгоритмы это литература   Как читать книги?</description>
    </item>
    
    <item>
      <title>Задачи RMQ и LCA</title>
      <link>https://vporoshok.me/slides/2019/03/rmq__lca/</link>
      <pubDate>Sat, 09 Mar 2019 04:07:12 +0000</pubDate>
      
      <guid>https://vporoshok.me/slides/2019/03/rmq__lca/</guid>
      <description>\[ \gdef\rmq{\mathop{\mathrm{rmq}}} \gdef\lca{\mathop{\mathrm{lca}}} \gdef\new{\mathop{\mathrm{new}}} \]  Задачи RMQ и LCA   План  задача и применение RMQ -&amp;gt; LCA offline LCA online RMQ ±1 RMQ LCA -&amp;gt; ±1 RMQ    Задача и применение   Задача и применение RMQ (range minimum query) Выбор наименьшего элемента в отрезке индексов.
Дано: \(A = \{a_k \colon k &amp;lt; n \}\).
Операции:
 \(\rmq(i, j) = \min\{a_k \colon i \leqslant k \leqslant j\}\).</description>
    </item>
    
    <item>
      <title>Семейство непересекающихся множеств</title>
      <link>https://vporoshok.me/slides/2019/03/dsu/</link>
      <pubDate>Fri, 08 Mar 2019 14:57:14 +0000</pubDate>
      
      <guid>https://vporoshok.me/slides/2019/03/dsu/</guid>
      <description>DSU   Семейство непересекающихся множеств   План  задача и применение ранговая эвристика сжатие путей статистики динамический направленный лес вариант реализации    Задача и применение   Задача и применение Дано множество \(E = \{x_i\colon i &amp;lt; n\}\) &amp;mdash; Универсум.
В каждый момент времени существует разбиение
такое, что
  Задача и применение На семействе \(\mathbb X\) определим 2 операции:
  Задача и применение Находит применение в решении задач</description>
    </item>
    
    <item>
      <title>Хеш-таблицы</title>
      <link>https://vporoshok.me/slides/2019/02/hashing/</link>
      <pubDate>Fri, 01 Mar 2019 16:43:34 +0000</pubDate>
      
      <guid>https://vporoshok.me/slides/2019/02/hashing/</guid>
      <description>Хеш-таблицы   План  задача и применение неконстантные решения хеширование коллизии анализ сложности с допущениями без допущений    Задача и применение   Задача и применение Есть множество пар \((k, v)\) &amp;mdash; ключ-значение. Необходимо построить структуру хранения этих пар так, чтобы на ней были определены операции:
 set(k, v) get(k) delete(k)    Неконстантные решения   Неконстантные решения   Хеширование   Хеширование Выделим массив для хранения пар размера \(N\), при этом допустимое множество ключей \(K\) такое, что \(|K| \gg N\).</description>
    </item>
    
    <item>
      <title>Не пишите CSS</title>
      <link>https://vporoshok.me/slides/2019/02/utility-classes/</link>
      <pubDate>Sun, 24 Feb 2019 10:31:26 +0000</pubDate>
      
      <guid>https://vporoshok.me/slides/2019/02/utility-classes/</guid>
      <description>Photo by Lubo Minar on Unsplash   Как сверстать?   Всем привет!   План  Исторический экскурс и семантическая вёрстка Проблемы CSS OOCSS и БЭМ Проблемы контейнеров Препроцессоры Проблемы препроцессоров Как перестать писать CSS? Что дальше?    Исторический экскурси семантическая вёрстка   Photo by Jenny Marvin on Unsplash   Сначала был HTML HTML 3.2 (1997)
&amp;lt;img align=&amp;#34;right&amp;#34; src=&amp;#34;alice.jpg&amp;#34; /&amp;gt; &amp;lt;font face=&amp;#34;Arial&amp;#34; size=&amp;#34;4&amp;#34; color=&amp;#34;firebrick&amp;#34;&amp;gt; Похоже на экспорт Word&amp;#39;а &amp;lt;/font&amp;gt;  CSS 1.</description>
    </item>
    
    <item>
      <title>Хакатон. Как не перестать улыбаться за 24 часа</title>
      <link>https://vporoshok.me/slides/2018/12/hackathon/</link>
      <pubDate>Tue, 25 Dec 2018 12:00:00 +0000</pubDate>
      
      <guid>https://vporoshok.me/slides/2018/12/hackathon/</guid>
      <description>ХакатонКак не перестать улыбаться за 24 часа  Всем привет!   План  Что такое хакатон? Кто такие хакеры? Хакатон vs Работа Виды и задачи хакатонов Подготовка    Что такое хакатон?   Photo by Emily Morter on Unsplash   Что такое хакатон? Hackathon = hack + marathon 4 июня 1999 &amp;mdash; OpenBSD 15&amp;ndash;19 июня 1999 &amp;mdash; JavaOne    Кто такие хакеры?      Кто такие хакеры?</description>
    </item>
    
    <item>
      <title>Кучи с эффективным слиянием</title>
      <link>https://vporoshok.me/slides/2018/11/meldable-heaps/</link>
      <pubDate>Thu, 15 Nov 2018 14:00:00 +0000</pubDate>
      
      <guid>https://vporoshok.me/slides/2018/11/meldable-heaps/</guid>
      <description>Кучи с эффективным слиянием   План   Задача и применение   Задача и применение Операция слияния куч находит применение в таких алгоритмах, как многопутевые слияния, поиск кратчайшего пути в графе и других. Вместо добавления новых элементов по одному.  Биномиальные кучи   Биномиальные кучи  Биномиальная куча лес, состоящий из биномиальных деревьев    Биномиальные деревья subgraph k = 2 D(( )) D --- E(( )) D --- F(( )) F --- G(( )) end subgraph k = 1 B(( )) B --- C(( )) end subgraph k = 0 A(( )) end  &amp;lt;/figcaption&amp;gt;    Биномиальные деревья Биномиальное дерево порядка \(0\) состоит из одной вершины, а биномиальное дерево порядка \(k\) является объединением двух деревьев порядка \(k - 1\) так, что корень одного из них является сыном корня другого.</description>
    </item>
    
    <item>
      <title>Простая двоичная куча</title>
      <link>https://vporoshok.me/slides/2018/11/simple-heap/</link>
      <pubDate>Fri, 02 Nov 2018 15:00:00 +0000</pubDate>
      
      <guid>https://vporoshok.me/slides/2018/11/simple-heap/</guid>
      <description>Двоичная куча   План  задача и применение куча: определение и базовые операции двоичная куча: определение и индексация реализация базовых операций другие операции и итераторы эффективное построение кучи пирамидальная сортировка    Задача и применение   Задача  Очередь с приоритетом вектор с координатами из линейно упорядоченного множества, на котором определены две операции:  добавление элемента извлечение минимума      Применение  слияние нескольких массивов выбор пордяковых статистик частичная сортировка данных поиск кратчайшего пути построение минимального остова графа    Решения?</description>
    </item>
    
  </channel>
</rss>

<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Презентации on Где-то на дальнем сервере</title>
    <link>https://vporoshok.me/slides/</link>
    <description>Recent content in Презентации on Где-то на дальнем сервере</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ru</language>
    
	<atom:link href="https://vporoshok.me/slides/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Синхронизация состояния в распределённых системах</title>
      <link>https://vporoshok.me/slides/2019/11/state-sync/</link>
      <pubDate>Sat, 16 Nov 2019 12:24:33 +0000</pubDate>
      
      <guid>https://vporoshok.me/slides/2019/11/state-sync/</guid>
      <description>.middle { position: absolute; top: 50%; left: 50%; transform: translate(-50%, -50%); }   Синхронизация состояния в распределённых системах   Всем привет!  Бастрыков Евгений Программирую с 2013 Преподаю «Алгоритмы и структуры данных» Разрабатываю QuickBPM vporoshok.me
   План  кеш во внешнем сервисе кеш внутри сервиса шардирование  Не используйте, если можете   Кеш во внешнем сервисе   Кеш во внешнем сервисе Распределённая = Конкурентная   Кеш во внешнем сервисе Идеален, если</description>
    </item>
    
    <item>
      <title>Алгоритмы?! А оно мне надо?</title>
      <link>https://vporoshok.me/slides/2019/05/why-algorithm/</link>
      <pubDate>Sun, 05 May 2019 05:37:34 +0000</pubDate>
      
      <guid>https://vporoshok.me/slides/2019/05/why-algorithm/</guid>
      <description>#title h2 { width: 500px; line-height: 1.5; margin-left: auto; margin-right: 20px; } .why h2 { width: 500px; line-height: 1.5; margin-right: auto; margin-left: 20px; } .books h2 { margin-top: 100px !important; }   Алгоритмы?!
А оно мне надо?   Photo by Ben White on Unsplash   Всем привет!  Бастрыков Евгений Программирую с 2013 Преподаю «Алгоритмы и структуры данных» Разрабатываю elma365 vporoshok.me
   О чём доклад для чего?</description>
    </item>
    
    <item>
      <title>Задачи RMQ и LCA</title>
      <link>https://vporoshok.me/slides/2019/03/rmq__lca/</link>
      <pubDate>Sat, 09 Mar 2019 04:07:12 +0000</pubDate>
      
      <guid>https://vporoshok.me/slides/2019/03/rmq__lca/</guid>
      <description>.w-25 { width: 25%; margin-left: auto; margin-right: auto; }  \[ \gdef\rmq{\mathop{\mathrm{rmq}}} \gdef\lca{\mathop{\mathrm{lca}}} \gdef\new{\mathop{\mathrm{new}}} \]  Задачи RMQ и LCA   План  задача и применение RMQ -&amp;gt; LCA offline LCA online RMQ ±1 RMQ LCA -&amp;gt; ±1 RMQ   Задача и применение   Задача и применение RMQ (range minimum query) Выбор наименьшего элемента в отрезке индексов.
Дано: \(A = \{a_k \colon k &amp;lt; n \}\).</description>
    </item>
    
    <item>
      <title>Семейство непересекающихся множеств</title>
      <link>https://vporoshok.me/slides/2019/03/dsu/</link>
      <pubDate>Fri, 08 Mar 2019 14:57:14 +0000</pubDate>
      
      <guid>https://vporoshok.me/slides/2019/03/dsu/</guid>
      <description>DSU   Семейство непересекающихся множеств   План  задача и применение ранговая эвристика сжатие путей статистики динамический направленный лес вариант реализации   Задача и применение   Задача и применение Дано множество \(E = \{x_i\colon i &amp;lt; n\}\) &amp;mdash; Универсум.
В каждый момент времени существует разбиение
\[ \mathbb X = \{X_j \colon j такое, что
\[ \cup \mathbb X = E, \quad\text{и}\quad X_j \cap X_l = \varnothing \quad(i \neq j) \]    Задача и применение На семействе \(\mathbb X\) определим 2 операции:</description>
    </item>
    
    <item>
      <title>Хеш-таблицы</title>
      <link>https://vporoshok.me/slides/2019/02/hashing/</link>
      <pubDate>Fri, 01 Mar 2019 16:43:34 +0000</pubDate>
      
      <guid>https://vporoshok.me/slides/2019/02/hashing/</guid>
      <description>.red { color: red; }  Хеш-таблицы   План  задача и применение неконстантные решения хеширование коллизии анализ сложности с допущениями без допущений   Задача и применение   Задача и применение Есть множество пар \((k, v)\) &amp;mdash; ключ-значение. Необходимо построить структуру хранения этих пар так, чтобы на ней были определены операции:
 set(k, v) get(k) delete(k)   Неконстантные решения   Неконстантные решения          Структура new set get del   Массив \(O(n)\) \(O(1)\) \(O(n)\) \(O(n)\) Отсортированный массив \(O(n\log n)\) \(O(\log n)^\star\) \(O(\log n)^\star\) \(O(\log n)^\star\) Дерево поиска \(O(n)\) \(O(\log n)\) \(O(\log n)\) \(O(\log n)\) Хочется \(O(n)\) \(O(1)\) \(O(1)\) \(O(1)\)   Хеширование   Хеширование Выделим массив для хранения пар размера \(N\), при этом допустимое множество ключей \(K\) такое, что \(|K| \gg N\).</description>
    </item>
    
    <item>
      <title>Не пишите CSS</title>
      <link>https://vporoshok.me/slides/2019/02/utility-classes/</link>
      <pubDate>Sun, 24 Feb 2019 10:31:26 +0000</pubDate>
      
      <guid>https://vporoshok.me/slides/2019/02/utility-classes/</guid>
      <description>.title h2 { font-weight: bold; text-align: right; } .shadow figure:after { content: &#39;&#39;; position: absolute; top: 0; left: 0; right: 0; bottom: 0; width: 100%; height: 100%; z-index: -1; background-color: rgba(0, 0, 0, 0.3); } #stop-digging h2 { position: absolute; margin-top: 150px; } .cards { display: flex; width: 100%; justify-content: space-between; align-items: stretch; font-size: 0.7rem; font-weight: 300; line-height: 1.3; } .card { width: 23%; border: 1px solid slateblue; } .</description>
    </item>
    
    <item>
      <title>Хакатон. Как не перестать улыбаться за 24 часа</title>
      <link>https://vporoshok.me/slides/2018/12/hackathon/</link>
      <pubDate>Tue, 25 Dec 2018 12:00:00 +0000</pubDate>
      
      <guid>https://vporoshok.me/slides/2018/12/hackathon/</guid>
      <description>.places { position: relative; } .w-30 { width: 33.3%; height: 50%; object-fit: cover; } .marathon h2 { position: absolute; top: 60px; } .versus { position: relative; } .versus h2 { font-size: 72px; font-weight: bold !important; } .versus sup, .versus sub { position: absolute; display: inline-block; font-size: 1em; line-height: 1; } .versus sup { top: 200px; left: 60px; } .versus sub { bottom: 200px; right: 60px; } .versus span { display: none; } .</description>
    </item>
    
    <item>
      <title>Кучи с эффективным слиянием</title>
      <link>https://vporoshok.me/slides/2018/11/meldable-heaps/</link>
      <pubDate>Thu, 15 Nov 2018 14:00:00 +0000</pubDate>
      
      <guid>https://vporoshok.me/slides/2018/11/meldable-heaps/</guid>
      <description>.w-75 { width: 75%; margin-left: auto; margin-right: auto; } .w-50 { width: 50%; margin-left: auto; margin-right: auto; } .w-25 { width: 25%; margin-left: auto; margin-right: auto; }  Кучи с эффективным слиянием   План  задача и применение биномиальные кучи  хранение и адресация слияние извлечение минимума  левацкие кучи   Задача и применение   Задача и применение Операция слияния куч находит применение в таких алгоритмах, как многопутевые слияния, поиск кратчайшего пути в графе и других.</description>
    </item>
    
    <item>
      <title>Простая двоичная куча</title>
      <link>https://vporoshok.me/slides/2018/11/simple-heap/</link>
      <pubDate>Fri, 02 Nov 2018 15:00:00 +0000</pubDate>
      
      <guid>https://vporoshok.me/slides/2018/11/simple-heap/</guid>
      <description>.red { color: red; }  Двоичная куча   План  задача и применение куча: определение и базовые операции двоичная куча: определение и индексация реализация базовых операций другие операции и итераторы эффективное построение кучи пирамидальная сортировка   Задача и применение   Задача  Очередь с приоритетом вектор с координатами из линейно упорядоченного множества, на котором определены две операции:  добавление элемента извлечение минимума    Применение  слияние нескольких массивов выбор пордяковых статистик частичная сортировка данных поиск кратчайшего пути построение минимального остова графа   Решения?</description>
    </item>
    
  </channel>
</rss>